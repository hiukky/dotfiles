#!/bin/bash
# By @hiukky https://hiukky.com

sudo pacman -S figlet lolcat --needed --noconfirm &>/dev/null

declare -a OPTIONS_MENU=(
    'Dots'
    'Packages'
    'Others'
)

declare -a OPTIONS_DOTS=(
    'Initialize new machine configuration.'
    'Configure from existing dotfiles.'
)

declare -a OPTIONS_PKGS=(
    'Sync NPM packages.'
    'Sync System packages.'
    'Sync All packages.'
)

declare -a OPTIONS_OTHERS=(
    'Install Redis Server.'
)

_colorfy() {
    echo "$1" | lolcat
}

_dot() {
  /usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME $@
}

_init() {
  if [ ! -d "$HOME/.dotfiles" ]; then
    _colorfy $'\n Initializing dotfiles configuration ...\n'

    git init --bare $HOME/.dotfiles
    alias dot='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'
    _dot config --local status.showUntrackedFiles no
    echo "alias dot='/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME'" >> $HOME/.zshrc
  else
    _colorfy $'\n Dotfiles already booted! \n'
    exit 0
  fi

  _colorfy $'\n Done!! \n'
}

_sync() {
  if [ ! -d "$HOME/.dotfiles" ]; then
    git clone --bare git@github.com:hiukky/dotfiles.git $HOME/.dotfiles
    mkdir -p .config-bck
    _dot checkout
  fi

  if [ $? = 0 ]; then
    _colorfy $'\n Dotfiles checked! \n'

    else
      _colorfy $'\n Backing up ...\n'
      _dot checkout 2>&1 | egrep "\s+\." | awk {'print $1'} | xargs -I{} mv {} .config-bck/{}
  fi

  _dot checkout
  _dot config status.showUntrackedFiles no

  echo
}

_menuHeader() {
  clear

  figlet Dotsync | lolcat

 if [ -n "$1" ]; then
   _colorfy $'\n'"$1"$'\n'
 fi

  PS3=$'\n Select an option: '
}

_menuDots() {
  _menuHeader "- D O T S"

  select option in "${OPTIONS_DOTS[@]}"
  do
    case "$REPLY" in
      1)
        _init
        break;;
      2)
        _sync
        break;;
      esac
  done
}

_menuPkgs() {
  _menuHeader "- P A C K A G E S"


  select option in "${OPTIONS_PKGS[@]}"
  do
    case "$REPLY" in
      1)
        python -c 'import scripts.packages; scripts.packages._syncNpmPkgs()'
        break;;
      2)
        python -c 'import scripts.packages; scripts.packages._syncSystemPkgs()'
        break;;
      3)
        python -c 'import scripts.packages; scripts.packages._syncAllPkgs()'
        break;;
      esac
  done
}

_menuOthers() {
  _menuHeader "- O T H E R S"

  select option in "${OPTIONS_OTHERS[@]}"
  do
    case "$REPLY" in
      1)
        python -c 'import scripts.redis; scripts.redis._install()'
        break;;
      esac
  done
}

_menu() {
  _menuHeader

  select option in "${OPTIONS_MENU[@]}"
  do
    case "$REPLY" in
      1)
        _menuDots
        break;;
      2)
        _menuPkgs
        break;;
      3)
        _menuOthers
        break;;
      esac
  done
}

_menu
